import sys
import os
from Seniorfinal import BackendServer


current_script_directory = os.path.dirname(os.path.abspath(__file__))


print("Current Script Directory:", current_script_directory)


sys.path.append(current_script_directory)


print("Updated sys.path:", sys.path)


downloads_path = os.path.join(os.path.expanduser("~"), "Downloads")
sys.path.append(downloads_path)

# Print the updated sys.path for verification
print("Updated sys.path with Downloads:", sys.path)

import unittest
from Seniorfinal import BackendServer  

class TestBackendServer(unittest.TestCase):
    def setUp(self):
        self.backend_server = BackendServer()

    def test_is_strong_password(self):
      
        self.assertTrue(self.backend_server.is_strong_password("StrongPassword123"))
        self.assertFalse(self.backend_server.is_strong_password("Weak123"))

    def test_fetch_unread_emails(self):
      
Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework" --path-rename "matlab_R2023b_maci64.dmg"
nread_emails function
    
        self.backend_server.users["mock_user@example.com"] = {"name": "Mock User", "password": "Mock123", "reminder_time": "09:00"}
        unread_emails = self.backend_server.fetch_unread_emails("mock_user@example.com")

        self.assertEqual(len(unread_emails), 2)  # Adjust based on your actual implementation

if __name__ == '__main__':
    unittest.main()

